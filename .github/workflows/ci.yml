name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --verbose

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate test coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: cobertura.xml
        fail_ci_if_error: false

    - name: Check coverage threshold
      run: |
        cargo tarpaulin --out Json --output-dir .
        python3 -c "
        import json
        import sys
        with open('tarpaulin-report.json', 'r') as f:
            data = json.load(f)
        coverage = data['coverage']
        threshold = 90
        print(f'Coverage: {coverage:.2f}%')
        if coverage < threshold:
            print(f'❌ Coverage {coverage:.2f}% is below required {threshold}%')
            print('Current coverage report available in tarpaulin-report.json')
            sys.exit(1)
        else:
            print(f'✅ Coverage {coverage:.2f}% meets minimum requirement of {threshold}%')
        "

    - name: Check documentation
      run: cargo doc --no-deps --document-private-items